const ObjectId = require("mongodb").ObjectId;
const image = require("class/image.js");

module.exports = async session => {
    const db = await require("class/database.js");
    const results = await db.collection("members").aggregate([
        { $match: { member_id: ObjectId(session.user_id) } },
        { $lookup: { from: "guilds", localField: "guild_id", foreignField: "_id", as: "guild"} },
        { $project: { guild: { $arrayElemAt: ["$guild", 0] } } },
        { $lookup: { from: "guild_channels", localField: "guild._id", foreignField: "guild_id", as: "channels" } },
        { $lookup: { from: "emojis", localField: "guild._id", foreignField: "guild_id", as: "emojis"} },
        { $project: { guild: 1, channels: { $map: { input: "$channels", as: "channel", in: { id: "$$channel._id", name: "$$channel.name" } } }, emojis: { $map: { input: "$emojis", as: "emoji", in: { id: "$$emoji._id", name: "$$emoji.name" } } } } }
    ]).toArray();

    if (results.length > 0) {
        const array = [];
        const length = results.length;
        for (let result of results) {
            const { channels } = result;

            const length = channels.length;
            for (let i = 0; i < length; i++) {
                const channel = channels[i];
                channels[i] = {
                    id: channel.id.toString(),
                    name: channel.name
                };
            }

            array.push({
                id: result.guild._id.toString(),
                name: result.guild.name,
                icon: image.url(result.guild.icon, "icon"),
                owner: result.guild.owner.toString() === session.user_id,
                channels: channels,
                emojis: result.emojis
            });
        }

        return {
            status: true,
            type: "GUILDS",
            guilds: array
        }
    } else {
        return {
            status: false
        }
    }
}