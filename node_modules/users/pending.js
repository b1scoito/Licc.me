const ObjectId = require("mongodb").ObjectId;
const image = require("class/image.js");

module.exports = async session => {
    const db = await require("class/database.js");
    const results = await db.collection("dm_channels").aggregate([
        { $match: { $and: [ { $or: [ { client: ObjectId(session.user_id) }, { recipient: ObjectId(session.user_id) } ] }, { accepted: false } ] } },
        { $sort: { _id: -1 } },
        { $lookup: { from: "users", localField: "client", foreignField: "_id", as: "u1" } },
        { $lookup: { from: "users", localField: "recipient", foreignField: "_id", as: "u2" } },
        { $project: { acceptable: { $eq: ["$recipient", ObjectId(session.user_id)] }, user: { $cond: { if: { $eq: ["$client", ObjectId(session.user_id)] }, then: { $arrayElemAt: ["$u2", 0] }, else: { $arrayElemAt: ["$u1", 0] } } } } },
        { $project: { "user.email": 0, "user.password": 0, "user.date": 0 } }
    ]).toArray();

    if (results.length > 0) {
        const array = [];
        for (let result of results) {
            array.push({
                id: result._id.toString(),
                acceptable: result.acceptable,
                recipient: {
                    id: result.user._id.toString(),
                    username: result.user.username,
                    tag: result.user.tag,
                    avatar: image.url(result.user.avatar, "avatar"),
                }
            });
        }

        return {
            status: true,
            type: "PENDING_REQUESTS",
            pending: array
        }
    } else {
        return {
            status: false,
        }
    }
}