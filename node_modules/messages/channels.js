const ObjectId = require("mongodb").ObjectId;
const channel = require("class/channel.js");
const image = require("class/image.js");

module.exports = async (session, query) => {
    if (await session.set()) {
        const { channel_id, id } = query;

        if (await channel.hasDMPermission(channel_id, session.user_id)) {
            let results = null;

            const db = await require("class/database.js");
            if (typeof id === "string" && id.length === 24) {
                results = await db.collection("messages").aggregate([
                    { $match: { channel_id: ObjectId(channel.toObjectId(channel_id)), _id: { $lt : ObjectId(id) } } },
                    { $sort: { _id: -1 } },
                    { $limit: 50 },
                    { $lookup: { from: "users", localField: "user_id", foreignField: "_id", as: "user" } },
                    { $project: { "user.email": 0, "user.password": 0, "user.date": 0 } }
                ]).toArray();
            } else {
                results = await db.collection("messages").aggregate([
                    { $match: { channel_id: ObjectId(channel.toObjectId(channel_id)) } },
                    { $sort: { _id: -1 } },
                    { $limit: 50 },
                    { $lookup: { from: "users", localField: "user_id", foreignField: "_id", as: "user" } },
                    { $project: { "user.email": 0, "user.password": 0, "user.date": 0 } }
                ]).toArray();
            }

            const array = [];
            for (let result of results) {
                array.push({
                    id: result._id.toString(),
                    text: result.text,
                    date: result.date,
                    author: {
                        id: result.user[0]._id.toString(),
                        username: result.user[0].username,
                        tag: result.user[0].tag,
                        avatar: image.url(result.user[0].avatar, "avatar")
                    }
                });
            }

            return {
                status: true,
                channel_id: channel_id,
                messages: array
            }
        } else {
            return {
                status: false,
                error: "Missing permissions"
            }
        }
    } else {
        return {
            status: false
        }
    }
}