const ObjectId = require("mongodb").ObjectId;
const bcrypt = require("bcryptjs");
const check = require("class/check.js");

module.exports = async (session, message) => {
    if (await session.set()) {
        const { username, tag, password } = message;

        if (typeof username === "string" && typeof tag === "string" && typeof password === "string") {
            if (check.username(username) && check.tag(tag)) {
                if (password.length >= 8) {
                    const db = await require("class/database.js");
                    const count = await db.collection("users").count({ username: username, tag: tag }, { limit: 1 });

                    if (count === 0) {
                        const find = await db.collection("users").findOne({ _id: ObjectId(session.user_id) }, { projection: { _id: 0, password: 1 }});

                        if (await bcrypt.compare(password, find.password)) {
                            const result = await db.collection("users").updateOne({ _id: ObjectId(session.user_id) }, { $set: { username: username, tag: tag }});

                            if (result.modifiedCount === 1) {
                                return {
                                    status: true
                                }
                            } else {
                                return {
                                    status: false,
                                    error: "Failed to change your username or tag"
                                }
                            }
                        } else {
                            return {
                                status: false,
                                error: "Wrong password"
                            }
                        }
                    } else {
                        return {
                            status: false,
                            error: "Username/tag pair is already taken"
                        }
                    }
                }
            } else {
                return {
                    status: false,
                    error: "Invalid username or tag"
                }
            }
        } else {
            return {
                status: false,
                error: "Missing fields"
            }
        }
    } else {
        return {
            status: false
        }
    }
}