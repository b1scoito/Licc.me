const crypto = require("crypto");
const sharp = require("sharp");

class Image {
    static url(filename, type) {
        return filename === null ? `/${type}s/default.jpg` : `/${type}s/${filename}`;
    }

    static type(buffer) {
        let type = null;

        if (buffer.toString("hex", 0, 3) === "ffd8ff" || buffer.toString("hex", 0, 6) === "474946383961" || buffer.toString("hex", 0, 6) === "474946383761") {
            type = ".jpg";
        } else if (buffer.toString("hex", 0, 8) === "89504e470d0a1a0a") {
            type = ".png";
        }
        return type;
    }

    static async save(file, folder, size, extension = true) {
        let filename = null;

        if (typeof file === "string") {
            const dataURL = file.split(",")[1];

            if (dataURL !== undefined) {
                const buffer = Buffer.from(dataURL, "base64");
                const type = this.type(buffer);

                if (type !== null || !extension) {
                    filename = crypto.randomBytes(8).toString("hex") + (extension ? type : "");

                    try {
                        await sharp(buffer).resize(size, size).toFile(`${folder}/${filename}`);
                    } catch (error) {
                        console.log(error);
                    }
                }
            }
        }
        return filename;
    }
}

module.exports = Image;