const ObjectId = require("mongodb").ObjectId;
const channel = require("class/channel.js");

module.exports = async (session, message) => {
    if (await session.set()) {
        const { guild_id, channel_id, text } = message;

        if (await channel.hasGuildPermission(guild_id, channel_id, session.user_id)) {
            if (typeof text === "string" && text.length > 0) {
                if (text.length <= 1024) {
                    const db = await require("class/database.js");
                    const result = await db.collection("messages").insertOne({ channel_id: ObjectId(channel_id), user_id: ObjectId(session.user_id), text: text, date: new Date() });

                    if (result.insertedCount === 1) {
                        return {
                            status: true,
                            type: "MESSAGE",
                            id: result.insertedId.toString(),
                            guild_id: guild_id,
                            channel_id: channel_id,
                            text: text,
                            author: {
                                id: session.user_id,
                                username: session.username,
                                tag: session.tag,
                                avatar: session.avatar
                            }
                        }
                    } else {
                        return {
                            status: false,
                            error: "Failed to send message"
                        }
                    }
                } else {
                    return {
                        status: false,
                        error: "Message is too long"
                    }
                }
            } else {
                return {
                    status: false,
                    error: "Message is required"
                }
            }
        } else {
            return {
                status: false,
                error: "Missing permissions"
            }
        }
    } else {
        return {
            status: false
        }
    }
}