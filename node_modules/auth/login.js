const bcrypt = require("bcryptjs");
const check = require("class/check.js");

module.exports = async (session, message) => {
    if (!(await session.set())) {
        const { email, password } = message;

        if (typeof email === "string" && typeof password === "string") {
            if (check.email(email)) {
                if (password.length >= 8) {
                    const db = await require("class/database.js");
                    const find = await db.collection("users").findOne({ email: email }, { projection: { password: 1 } });

                    if (find !== null) {
                        const user_id = find._id.toString();
                        const hash = find.password;

                        if (await bcrypt.compare(password, hash)) {
                            if (await session.create(user_id)) {
                                return {
                                    status: true,
                                    token: session.token
                                }
                            } else {
                                return {
                                    status: false,
                                    error: "Failed to create session"
                                }
                            }
                        } else {
                            return {
                                status: false,
                                error: "Wrong password"
                            }
                        }
                    } else {
                        return {
                            status: false,
                            error: "Email not found"
                        }
                    }
                } else {
                    return {
                        status: false,
                        error: "Wrong password"
                    }
                }
            } else {
                return {
                    status: false,
                    error: "Invalid email"
                }
            }
        } else {
            return {
                status: false,
                error: "Missing fields"
            }
        }
    } else {
        return {
            status: false,
            error: "Already logged in"
        }
    }
}